row.names(sim.data) <- row.names(regime.data)
sim.data <- as.matrix(sim.data)
colnames(sim.data) <- c("winged", "wingless")
View(sim.data)
# now lets do a multiphylo object as well
new.trees <- vector("list", length=100)
for(i in 1:100){
new.trees[[i]] <- treedata(trees[[i]], data)[[1]]
}
class(new.trees) <- "multiPhylo"
# now clean up
rm(foo, i, trees, regime.data)
data <- read.csv("../data/carab.wingless.csv", as.is=T)
# remove NA data & add row names
data <- data[!is.na(data[, 3]), ]
row.names(data) <- data[, 1]
# read the tree
library(ape)
trees <- read.nexus("../data/trees.nexus")
# make a dataset in the make.simmap format for the focal taxa
library(geiger)
foo <- treedata(trees[[1]], data)
data <- foo[[2]]
regime.data <- data[, c(3,4)]
wing.data <- cbind(as.numeric(regime.data[,1]), as.numeric(regime.data[,2]))
row.names(wing.data) <- row.names(regime.data)
wing.data <- as.matrix(wing.data)
colnames(wing.data) <- c("winged", "wingless")
# now lets do a multiphylo object as well
new.trees <- vector("list", length=100)
for(i in 1:100){
new.trees[[i]] <- treedata(trees[[i]], data)[[1]]
}
class(new.trees) <- "multiPhylo"
chrom.data <- data
# now clean up
rm(foo, i, data, trees, regime.data)
# do the ancestral state reconstructions
library(phytools)
mapped.trees1 <- make.simmap(new.trees, wing.data, maxit=200000, model = "SYM", nsim = 5, pi = c(1, 0))
chrom.num <- as.numeric(chrom.data[, 2])
names(chrom.num) <- row.names(wing.data)
# get chromosome number data into a vector for brownielite
chrom.num <- as.numeric(chrom.data[, 2])
names(chrom.num) <- row.names(wing.data)
rm(chrom.data)
result <- list()
for(i in 1:500){
result[[i]] <- brownie.lite(mapped.trees1[[i]], chrom.num, maxit=200000, test="chisq", se=NULL)
print(i)
}
model1 <- model2 <- vector()
for(i in 1:500){
model1[i] <- result[[i]]$logL1
model2[i] <- result[[i]]$logL.multiple
}
mean(model1)
#[1] -507.4481
mean(model2)
#[1] -465.9293
1-pchisq((2*(-mean(model1)+mean(model2))), 1)
foo <- results[[1]]
foo <- result[[1]]
names(foo_)
names(foo)
foo[[2]]
foo[[1]]
foo[[3]]
foo[[4]]
foo[[5]]
foo[[6]]
foo[[7]]
foo[[8]]
foo[[9]]
foo[[10]]
foo[[11]]
foo[[12]]
residuals(foo)
help(residuals)
help(ace)
help(fiContinuius)
help(fiContinuous)
library(devtools)
install_github("mwpennell/arbutus")
wingless <- winged <- both <- vector()
for(i in 1:500){
winged[i] <- result[[i]]$sig2.multiple[1]
wingless[i] <- result[[i]]$sig2.multiple[2]
both[i] <- result[[i]]$sig2.single
}
plot(winged, pch=19, col="blue", ylim=c(0,60))
points(wingless, pch=19, col="red")
results2 <- cbind(winged,wingless)
getwd()
setwd("~/Desktop/Copy/gitrepos/chrom.num/data.analysis/analysis")
View(results2)
write.csv(results2, file="../results/wing.bm.rates.csv", row.names=F)
results2[,1] < results2[,2]
sum(results2[,1] < results2[,2])
library(geiger)
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
results <- matrix(, 100, length(taxa))
results.lb <- matrix(, 100, length(taxa))
results.ub <- matrix(, 100, length(taxa))
j <- 1
read.csv(paste(taxa[j], "../data/genus.data.trees/data.csv", sep = ""))
setwd("~/Desktop/Copy/gitrepos/chrom.num/data.analysis/analysis")
read.csv(paste(taxa[j], "../data/genus.data.trees/data.csv", sep = ""))
i <- 1
read.tree(paste("../data/genus.data.trees/taxa[j], "/", taxa[j], i,".tree", sep=""))
paste("../data/genus.data.trees/taxa[j], "/", taxa[j], i,".tree", sep="")
paste("../data/genus.data.trees/",
taxa[j],
"/",
taxa[j],
i,
".tree",
sep="")
read.tree(paste("../data/genus.data.trees/",
taxa[j],
"/",
taxa[j],
i,
".tree",
sep=""))
paste("../data/genus.data.trees/",
taxa[j],
"data.csv",
sep = "")
read.csv(paste("../data/genus.data.trees/",
taxa[j],
"/data.csv",
sep = "")
)
## This script will fit a BM model to the evoltuion of chromosome number in each group
library(geiger)
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
results <- matrix(, 100, length(taxa))
results.lb <- matrix(, 100, length(taxa))
results.ub <- matrix(, 100, length(taxa))
for(j in 1:length(taxa)){
data <- read.csv(paste("../data/genus.data.trees/",
taxa[j],
"/data.csv",
sep = ""))
chrom <- as.numeric(data[,2])
names(chrom) <- data[,1]
print(taxa[j])
for(i in 1:100){
tree <- read.tree(paste("../data/genus.data.trees/",
taxa[j],
"/",
taxa[j],
i,
".tree",
sep=""))
foobar <- fitContinuous(phy=tree, dat=chrom, model="BM", control = list(method= "L-BFGS-B", niter=5000,hessian = T))[[4]]
results[i,j] <- foobar$sigsq
results.lb[i,j] <- foobar$CI[1]
results.ub[i,j] <- foobar$CI[2]
}
}
library(geiger)
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
results <- matrix(, 100, length(taxa))
results.lb <- matrix(, 100, length(taxa))
results.ub <- matrix(, 100, length(taxa))
for(j in 1:length(taxa)){
data <- read.csv(paste("../data/genus.data.trees/",
taxa[j],
"/data.csv",
sep = ""))
chrom <- as.numeric(data[,2])
names(chrom) <- data[,1]
print(taxa[j])
for(i in 1:100){
cat(".")
tree <- read.tree(paste("../data/genus.data.trees/",
taxa[j],
"/",
taxa[j],
i,
".tree",
sep=""))
foobar <- fitContinuous(phy=tree, dat=chrom, model="BM", control = list(method= "L-BFGS-B", niter=5000,hessian = T))[[4]]
results[i,j] <- foobar$sigsq
results.lb[i,j] <- foobar$CI[1]
results.ub[i,j] <- foobar$CI[2]
}
}
fitContinuous(phy=tree,
dat=chrom,
model="BM")
fitContinuous(phy=tree,
dat=chrom,
model="BM",
control = list(method= "L-BFGS-B", niter=5000,hessian = T))
fitContinuous(phy=tree,
dat=chrom,
model="BM",
control = list(method= "L-BFGS-B", niter=100,hessian = T))
## This script will fit a BM model to the evoltuion of chromosome number in each group
library(geiger)
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
results <- list()
for(j in 1:length(taxa)){
data <- read.csv(paste("../data/genus.data.trees/",
taxa[j],
"/data.csv",
sep = ""))
chrom <- as.numeric(data[,2])
names(chrom) <- data[,1]
print(taxa[j])
group.results <- list()
for(i in 1:100){
cat(".")
tree <- read.tree(paste("../data/genus.data.trees/",
taxa[j],
"/",
taxa[j],
i,
".tree",
sep=""))
group.results[[i]] <- fitContinuous(phy=tree,
dat=chrom,
model="BM")
}
results[[j]] <- group.results
}
save(results, file="../results/genera.bm")
setwd("~/Desktop/Copy/gitrepos/chrom.num/data.analysis/analysis")
load("../results/genera.bm")
help(arbutrus)
help(arbutus)
library("arbutus", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
help(arbutus)
abutus(results[[1]][[1]])
arbutus(results[[1]][[1]])
arbutus(x = results[[1]][[1]])
results[[1]][[1]]
arbutus(x = results[[1]][[1]], nsim=10)
results[[1]][[1]]-> foo
foo[[1]]
foo[[2]]
foo[[3]]
foo[[4]]
class(foo)
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
arbutus(x = results[[2]][[1]], nsim=10)
arbutus(x = results[[3]][[1]], nsim=10)
arbutus(x = results[[4]][[1]], nsim=10)
arbutus(x = results[[5]][[1]], nsim=10)
j <- 1
data <- read.csv(paste("../data/genus.data.trees/",
taxa[j],
"/data.csv",
sep = ""))
View(data)
i <- 1
tree <- read.tree(paste("../data/genus.data.trees/",
taxa[j],
"/",
taxa[j],
i,
".tree",
sep=""))
tree
chrom <- as.numeric(data[,2])
names(chrom) <- data[,1]
foo <- fitContinuous(phy=tree, dat=chrom, model="BM")
arbutus(x = foo, nsim=10)
check.tree.data(x=tree, data=chrom)
tree$tip.label
chrom
names.tree <- tree$tip.labels
names.chrom <- names(chrom)
tree$tip.labels
tree$tip.label
names.tree <- tree$tip.label
names.chrom
names.tree
for(i in 1:){}
for(i in 1:){
for(i in 1:40) {names.chrom[i] %in% names.tree}
test <- vector()
for(i in 1:40) {
test[i] <- names.chrom[i] %in% names.tree
}
test
data(finch)
phy <- finch$phy
data <- finch$data[,"wingL"]
phy.tip.label
phy$tip.label
data
phy$tip.label
names(data)
help(fitContinuous)
data2 <- sample(data, size=13)
names(data)
names(data2)
data(finch)
phy <- finch$phy
data <- finch$data[,"wingL"]
data2 <- sample(data, size=13)
fit.bm1 <- fitContinuous(phy=phy, dat=data, model="BM", control=list(niter=10))
fit.bm2 <- fitContinuous(phy=phy, dat=data2, model="BM", control=list(niter=10))
fit.bm1
fit.bm2
arbutus(fit.bm1, nsim=10)
arbutus(fit.bm2, nsim=10)
tree$tip.label
library(geiger)
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
results <- list()
j <- 1
data <- read.csv(paste("../data/genus.data.trees/",
taxa[j],
"/data.csv",
sep = ""))
chrom <- as.numeric(data[,2])
names(chrom) <- data[,1]
chrom2 <- chrom ## a duplicate for sorting for arbutus
print(taxa[j])
group.results <- list()
i <- 1
cat(".")
tree <- read.tree(paste("../data/genus.data.trees/",
taxa[j],
"/",
taxa[j],
i,
".tree",
sep=""))
for(k in 1:length(tree$tip.label)){
data2[i] <- data[which(names(data) == tree$tip.label[k])]
}
for(k in 1:length(tree$tip.label)){
chrom2[i] <- chrom[which(names(chrom) == tree$tip.label[k])]
}
chrom
chrom2
chrom
chrom
tree$tip.label
chrom2
chrom
chrom2
chrom
chrom2
chrom
chrom2
chrom
chrom
chrom2
which(names(chrom) == tree$tip.label[k])
k <- 1
which(names(chrom) == tree$tip.label[k])
chrom[33]
for(k in 1:length(tree$tip.label)){
chrom2[k] <- chrom[which(names(chrom) == tree$tip.label[k])]
}
chrom
chrom2
for(k in 1:length(tree$tip.label)){
chrom2[k] <- chrom[which(names(chrom) == tree$tip.label[k])]
names(chrom2)[k] <- names(chrom)[which(names(chrom) == tree$tip.label[k])]
}
bm1 <- fitContinuous(phy=tree, dat=chrom, model="BM")
bm2 <- fitContinuous(phy=tree, dat=chrom2, model="BM")
bm1
bm2
arbutus(x = bm2, nsim=10)
arb <- arbutus(x = bm2, nsim=10)
plot(arb)
arb <- arbutus(x = bm2, nsim=100)
plot(arb)
arb <- arbutus(x = bm2, nsim=1000)
arbutus(x = bm2, nsim=1000)
arbutus(x = bm2, nsim=1000)
plot(arb)
arb[1]
arb[2]
arb[3]
arb <- arbutus(x = bm2, nsim=10)
arb[3]
## This script will fit a BM model to the evoltuion of chromosome number in
## each genera being studied.  The full fit object is returned to be used in
## conjunction with arbutrus
## Heath Blackmon
## 28 April 2015
## coleoguy@gmail.com
library(geiger)
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
results <- list()
for(j in 1:length(taxa)){
data <- read.csv(paste("../data/genus.data.trees/",
taxa[j],
"/data.csv",
sep = ""))
chrom <- as.numeric(data[,2])
names(chrom) <- data[,1]
chrom2 <- chrom ## a duplicate for sorting for arbutus
print(taxa[j])
group.results <- list()
for(i in 1:100){
cat(".")
tree <- read.tree(paste("../data/genus.data.trees/",
taxa[j],
"/",
taxa[j],
i,
".tree",
sep=""))
for(k in 1:length(tree$tip.label)){
chrom2[k] <- chrom[which(names(chrom) == tree$tip.label[k])]
names(chrom2)[k] <- names(chrom)[which(names(chrom) == tree$tip.label[k])]
}
group.results[[i]] <- fitContinuous(phy=tree,
dat=chrom,
model="BM")
}
results[[j]] <- group.results
}
save(results, file="../results/genera.bm")
load("../results/genera.bm")
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
arbutus(results[[2]][[1]])
arbutus(results[[1]][[1]])
## This script will fit a BM model to the evoltuion of chromosome number in
## each genera being studied.  The full fit object is returned to be used in
## conjunction with arbutrus
## Heath Blackmon
## 28 April 2015
## coleoguy@gmail.com
library(geiger)
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
results <- list()
for(j in 1:length(taxa)){
data <- read.csv(paste("../data/genus.data.trees/",
taxa[j],
"/data.csv",
sep = ""))
chrom <- as.numeric(data[,2])
names(chrom) <- data[,1]
chrom2 <- chrom ## a duplicate for sorting for arbutus
print(taxa[j])
group.results <- list()
for(i in 1:100){
cat(".")
tree <- read.tree(paste("../data/genus.data.trees/",
taxa[j],
"/",
taxa[j],
i,
".tree",
sep=""))
for(k in 1:length(tree$tip.label)){
chrom2[k] <- chrom[which(names(chrom) == tree$tip.label[k])]
names(chrom2)[k] <- names(chrom)[which(names(chrom) == tree$tip.label[k])]
}
group.results[[i]] <- fitContinuous(phy=tree,
dat=chrom2,
model="BM")
}
results[[j]] <- group.results
}
save(results, file="../results/genera.bm")
load("../results/genera.bm")
taxa   <- c('Bembidion', 'Calathus', 'Chrysolina',
'Cicindela', 'Cytronus', 'Dendroctonus',
'Diabrotica', 'Harpalus', 'Ips', 'Pimelia',
'Pterostichus', 'Timarcha')
arbutus(results[[1]][[1]])
arbutus(results[[2]][[1]])
arbutus(results[[3]][[1]])
plot(arbutus(results[[4]][[1]]))
plot(arbutus(results[[5]][[1]]))
plot(arbutus(results[[6]][[1]]))
plot(arbutus(results[[7]][[1]]))
plot(arbutus(results[[8]][[1]]))
plot(arbutus(results[[9]][[1]]))
plot(arbutus(results[[10]][[1]]))
plot(arbutus(results[[11]][[1]]))
plot(arbutus(results[[12]][[1]]))
